Performing C SOURCE FILE Test HAVE_GCC_PREFERRED_STACK_BOUNDARY failed with the following output:
Change Dir: /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_4965c/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_4965c.dir/build.make CMakeFiles/cmTC_4965c.dir/build
gmake[1]: Entering directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_4965c.dir/src.c.o
/home/ost/programs/emsdk/emscripten/1.37.14/emcc   -g -O3 -DHAVE_GCC_PREFERRED_STACK_BOUNDARY -mpreferred-stack-boundary=2   -o CMakeFiles/cmTC_4965c.dir/src.c.o   -c /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp/src.c
clang: error: unknown argument: '-mpreferred-stack-boundary=2'
ERROR:root:compiler frontend failed to generate LLVM bitcode, halting
CMakeFiles/cmTC_4965c.dir/build.make:65: recipe for target 'CMakeFiles/cmTC_4965c.dir/src.c.o' failed
gmake[1]: *** [CMakeFiles/cmTC_4965c.dir/src.c.o] Error 1
gmake[1]: Leaving directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_4965c/fast' failed
gmake: *** [cmTC_4965c/fast] Error 2

Source file was:
int x = 0; int main(int argc, char **argv) {}
Determining if the function _strrev exists failed with the following output:
Change Dir: /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_c313d/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_c313d.dir/build.make CMakeFiles/cmTC_c313d.dir/build
gmake[1]: Entering directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c313d.dir/CheckFunctionExists.c.o
/home/ost/programs/emsdk/emscripten/1.37.14/emcc   -g -O3 -DCHECK_FUNCTION_EXISTS=_strrev -s ERROR_ON_UNDEFINED_SYMBOLS=1   -o CMakeFiles/cmTC_c313d.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
Linking C executable cmTC_c313d.js
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c313d.dir/link.txt --verbose=1
/home/ost/programs/emsdk/emscripten/1.37.14/emcc -g -O3 -DCHECK_FUNCTION_EXISTS=_strrev -s ERROR_ON_UNDEFINED_SYMBOLS=1    @CMakeFiles/cmTC_c313d.dir/objects1.rsp  -o cmTC_c313d.js 
error: unresolved symbol: _strrev
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc", line 13, in <module>
    emcc.run()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc.py", line 1524, in run
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/shared.py", line 2007, in emscripten
    call_emscripten(cmdline)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2195, in _main
    temp_files.run_and_clean(lambda: main(
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/tempfiles.py", line 78, in run_and_clean
    return func()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2200, in <lambda>
    DEBUG=DEBUG,
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2100, in main
    temp_files=temp_files, DEBUG=DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 98, in emscript
    glue, forwarded_data = compiler_glue(metadata, settings, libraries, compiler_engine, temp_files, DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 219, in compiler_glue
    glue, forwarded_data = compile_settings(compiler_engine, settings, libraries, temp_files)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 531, in compile_settings
    cwd=path_from_root('src'), error_limit=300)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/jsrun.py", line 128, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/home/ost/programs/emsdk/node/4.1.1_64bit/bin/node', '/home/ost/programs/emsdk/emscripten/1.37.14/src/compiler.js', '/tmp/tmpysRWNo.txt', '/home/ost/programs/emsdk/emscripten/1.37.14/src/library_pthread_stub.js'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
CMakeFiles/cmTC_c313d.dir/build.make:98: recipe for target 'cmTC_c313d.js' failed
gmake[1]: *** [cmTC_c313d.js] Error 1
gmake[1]: Leaving directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_c313d/fast' failed
gmake: *** [cmTC_c313d/fast] Error 2


Determining if the function _strupr exists failed with the following output:
Change Dir: /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_03bc9/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_03bc9.dir/build.make CMakeFiles/cmTC_03bc9.dir/build
gmake[1]: Entering directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_03bc9.dir/CheckFunctionExists.c.o
/home/ost/programs/emsdk/emscripten/1.37.14/emcc   -g -O3 -DCHECK_FUNCTION_EXISTS=_strupr -s ERROR_ON_UNDEFINED_SYMBOLS=1   -o CMakeFiles/cmTC_03bc9.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
Linking C executable cmTC_03bc9.js
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_03bc9.dir/link.txt --verbose=1
/home/ost/programs/emsdk/emscripten/1.37.14/emcc -g -O3 -DCHECK_FUNCTION_EXISTS=_strupr -s ERROR_ON_UNDEFINED_SYMBOLS=1    @CMakeFiles/cmTC_03bc9.dir/objects1.rsp  -o cmTC_03bc9.js 
error: unresolved symbol: _strupr
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc", line 13, in <module>
    emcc.run()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc.py", line 1524, in run
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/shared.py", line 2007, in emscripten
    call_emscripten(cmdline)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2195, in _main
    temp_files.run_and_clean(lambda: main(
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/tempfiles.py", line 78, in run_and_clean
    return func()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2200, in <lambda>
    DEBUG=DEBUG,
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2100, in main
    temp_files=temp_files, DEBUG=DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 98, in emscript
    glue, forwarded_data = compiler_glue(metadata, settings, libraries, compiler_engine, temp_files, DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 219, in compiler_glue
    glue, forwarded_data = compile_settings(compiler_engine, settings, libraries, temp_files)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 531, in compile_settings
    cwd=path_from_root('src'), error_limit=300)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/jsrun.py", line 128, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/home/ost/programs/emsdk/node/4.1.1_64bit/bin/node', '/home/ost/programs/emsdk/emscripten/1.37.14/src/compiler.js', '/tmp/tmp5iulk0.txt', '/home/ost/programs/emsdk/emscripten/1.37.14/src/library_pthread_stub.js'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
CMakeFiles/cmTC_03bc9.dir/build.make:98: recipe for target 'cmTC_03bc9.js' failed
gmake[1]: *** [cmTC_03bc9.js] Error 1
gmake[1]: Leaving directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_03bc9/fast' failed
gmake: *** [cmTC_03bc9/fast] Error 2


Determining if the function _strlwr exists failed with the following output:
Change Dir: /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_7c2c1/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_7c2c1.dir/build.make CMakeFiles/cmTC_7c2c1.dir/build
gmake[1]: Entering directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_7c2c1.dir/CheckFunctionExists.c.o
/home/ost/programs/emsdk/emscripten/1.37.14/emcc   -g -O3 -DCHECK_FUNCTION_EXISTS=_strlwr -s ERROR_ON_UNDEFINED_SYMBOLS=1   -o CMakeFiles/cmTC_7c2c1.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
Linking C executable cmTC_7c2c1.js
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7c2c1.dir/link.txt --verbose=1
/home/ost/programs/emsdk/emscripten/1.37.14/emcc -g -O3 -DCHECK_FUNCTION_EXISTS=_strlwr -s ERROR_ON_UNDEFINED_SYMBOLS=1    @CMakeFiles/cmTC_7c2c1.dir/objects1.rsp  -o cmTC_7c2c1.js 
error: unresolved symbol: _strlwr
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc", line 13, in <module>
    emcc.run()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc.py", line 1524, in run
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/shared.py", line 2007, in emscripten
    call_emscripten(cmdline)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2195, in _main
    temp_files.run_and_clean(lambda: main(
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/tempfiles.py", line 78, in run_and_clean
    return func()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2200, in <lambda>
    DEBUG=DEBUG,
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2100, in main
    temp_files=temp_files, DEBUG=DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 98, in emscript
    glue, forwarded_data = compiler_glue(metadata, settings, libraries, compiler_engine, temp_files, DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 219, in compiler_glue
    glue, forwarded_data = compile_settings(compiler_engine, settings, libraries, temp_files)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 531, in compile_settings
    cwd=path_from_root('src'), error_limit=300)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/jsrun.py", line 128, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/home/ost/programs/emsdk/node/4.1.1_64bit/bin/node', '/home/ost/programs/emsdk/emscripten/1.37.14/src/compiler.js', '/tmp/tmpSLTLg9.txt', '/home/ost/programs/emsdk/emscripten/1.37.14/src/library_pthread_stub.js'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
CMakeFiles/cmTC_7c2c1.dir/build.make:98: recipe for target 'cmTC_7c2c1.js' failed
gmake[1]: *** [cmTC_7c2c1.js] Error 1
gmake[1]: Leaving directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_7c2c1/fast' failed
gmake: *** [cmTC_7c2c1/fast] Error 2


Determining if the function itoa exists failed with the following output:
Change Dir: /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_a2cc2/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_a2cc2.dir/build.make CMakeFiles/cmTC_a2cc2.dir/build
gmake[1]: Entering directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a2cc2.dir/CheckFunctionExists.c.o
/home/ost/programs/emsdk/emscripten/1.37.14/emcc   -g -O3 -DCHECK_FUNCTION_EXISTS=itoa -s ERROR_ON_UNDEFINED_SYMBOLS=1   -o CMakeFiles/cmTC_a2cc2.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
Linking C executable cmTC_a2cc2.js
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a2cc2.dir/link.txt --verbose=1
/home/ost/programs/emsdk/emscripten/1.37.14/emcc -g -O3 -DCHECK_FUNCTION_EXISTS=itoa -s ERROR_ON_UNDEFINED_SYMBOLS=1    @CMakeFiles/cmTC_a2cc2.dir/objects1.rsp  -o cmTC_a2cc2.js 
error: unresolved symbol: itoa
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc", line 13, in <module>
    emcc.run()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc.py", line 1524, in run
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/shared.py", line 2007, in emscripten
    call_emscripten(cmdline)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2195, in _main
    temp_files.run_and_clean(lambda: main(
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/tempfiles.py", line 78, in run_and_clean
    return func()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2200, in <lambda>
    DEBUG=DEBUG,
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2100, in main
    temp_files=temp_files, DEBUG=DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 98, in emscript
    glue, forwarded_data = compiler_glue(metadata, settings, libraries, compiler_engine, temp_files, DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 219, in compiler_glue
    glue, forwarded_data = compile_settings(compiler_engine, settings, libraries, temp_files)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 531, in compile_settings
    cwd=path_from_root('src'), error_limit=300)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/jsrun.py", line 128, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/home/ost/programs/emsdk/node/4.1.1_64bit/bin/node', '/home/ost/programs/emsdk/emscripten/1.37.14/src/compiler.js', '/tmp/tmpzVPy9b.txt', '/home/ost/programs/emsdk/emscripten/1.37.14/src/library_pthread_stub.js'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
CMakeFiles/cmTC_a2cc2.dir/build.make:98: recipe for target 'cmTC_a2cc2.js' failed
gmake[1]: *** [cmTC_a2cc2.js] Error 1
gmake[1]: Leaving directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_a2cc2/fast' failed
gmake: *** [cmTC_a2cc2/fast] Error 2


Determining if the function _ltoa exists failed with the following output:
Change Dir: /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_b2a0a/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_b2a0a.dir/build.make CMakeFiles/cmTC_b2a0a.dir/build
gmake[1]: Entering directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b2a0a.dir/CheckFunctionExists.c.o
/home/ost/programs/emsdk/emscripten/1.37.14/emcc   -g -O3 -DCHECK_FUNCTION_EXISTS=_ltoa -s ERROR_ON_UNDEFINED_SYMBOLS=1   -o CMakeFiles/cmTC_b2a0a.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
Linking C executable cmTC_b2a0a.js
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b2a0a.dir/link.txt --verbose=1
/home/ost/programs/emsdk/emscripten/1.37.14/emcc -g -O3 -DCHECK_FUNCTION_EXISTS=_ltoa -s ERROR_ON_UNDEFINED_SYMBOLS=1    @CMakeFiles/cmTC_b2a0a.dir/objects1.rsp  -o cmTC_b2a0a.js 
error: unresolved symbol: _ltoa
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc", line 13, in <module>
    emcc.run()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc.py", line 1524, in run
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/shared.py", line 2007, in emscripten
    call_emscripten(cmdline)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2195, in _main
    temp_files.run_and_clean(lambda: main(
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/tempfiles.py", line 78, in run_and_clean
    return func()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2200, in <lambda>
    DEBUG=DEBUG,
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2100, in main
    temp_files=temp_files, DEBUG=DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 98, in emscript
    glue, forwarded_data = compiler_glue(metadata, settings, libraries, compiler_engine, temp_files, DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 219, in compiler_glue
    glue, forwarded_data = compile_settings(compiler_engine, settings, libraries, temp_files)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 531, in compile_settings
    cwd=path_from_root('src'), error_limit=300)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/jsrun.py", line 128, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/home/ost/programs/emsdk/node/4.1.1_64bit/bin/node', '/home/ost/programs/emsdk/emscripten/1.37.14/src/compiler.js', '/tmp/tmpYPNr_x.txt', '/home/ost/programs/emsdk/emscripten/1.37.14/src/library_pthread_stub.js'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
CMakeFiles/cmTC_b2a0a.dir/build.make:98: recipe for target 'cmTC_b2a0a.js' failed
gmake[1]: *** [cmTC_b2a0a.js] Error 1
gmake[1]: Leaving directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_b2a0a/fast' failed
gmake: *** [cmTC_b2a0a/fast] Error 2


Determining if the function _uitoa exists failed with the following output:
Change Dir: /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_95a33/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_95a33.dir/build.make CMakeFiles/cmTC_95a33.dir/build
gmake[1]: Entering directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_95a33.dir/CheckFunctionExists.c.o
/home/ost/programs/emsdk/emscripten/1.37.14/emcc   -g -O3 -DCHECK_FUNCTION_EXISTS=_uitoa -s ERROR_ON_UNDEFINED_SYMBOLS=1   -o CMakeFiles/cmTC_95a33.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
Linking C executable cmTC_95a33.js
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_95a33.dir/link.txt --verbose=1
/home/ost/programs/emsdk/emscripten/1.37.14/emcc -g -O3 -DCHECK_FUNCTION_EXISTS=_uitoa -s ERROR_ON_UNDEFINED_SYMBOLS=1    @CMakeFiles/cmTC_95a33.dir/objects1.rsp  -o cmTC_95a33.js 
error: unresolved symbol: _uitoa
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc", line 13, in <module>
    emcc.run()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc.py", line 1524, in run
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/shared.py", line 2007, in emscripten
    call_emscripten(cmdline)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2195, in _main
    temp_files.run_and_clean(lambda: main(
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/tempfiles.py", line 78, in run_and_clean
    return func()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2200, in <lambda>
    DEBUG=DEBUG,
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2100, in main
    temp_files=temp_files, DEBUG=DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 98, in emscript
    glue, forwarded_data = compiler_glue(metadata, settings, libraries, compiler_engine, temp_files, DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 219, in compiler_glue
    glue, forwarded_data = compile_settings(compiler_engine, settings, libraries, temp_files)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 531, in compile_settings
    cwd=path_from_root('src'), error_limit=300)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/jsrun.py", line 128, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/home/ost/programs/emsdk/node/4.1.1_64bit/bin/node', '/home/ost/programs/emsdk/emscripten/1.37.14/src/compiler.js', '/tmp/tmpX8U_p7.txt', '/home/ost/programs/emsdk/emscripten/1.37.14/src/library_pthread_stub.js'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
CMakeFiles/cmTC_95a33.dir/build.make:98: recipe for target 'cmTC_95a33.js' failed
gmake[1]: *** [cmTC_95a33.js] Error 1
gmake[1]: Leaving directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_95a33/fast' failed
gmake: *** [cmTC_95a33/fast] Error 2


Determining if the function _ultoa exists failed with the following output:
Change Dir: /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_1d324/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_1d324.dir/build.make CMakeFiles/cmTC_1d324.dir/build
gmake[1]: Entering directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1d324.dir/CheckFunctionExists.c.o
/home/ost/programs/emsdk/emscripten/1.37.14/emcc   -g -O3 -DCHECK_FUNCTION_EXISTS=_ultoa -s ERROR_ON_UNDEFINED_SYMBOLS=1   -o CMakeFiles/cmTC_1d324.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
Linking C executable cmTC_1d324.js
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1d324.dir/link.txt --verbose=1
/home/ost/programs/emsdk/emscripten/1.37.14/emcc -g -O3 -DCHECK_FUNCTION_EXISTS=_ultoa -s ERROR_ON_UNDEFINED_SYMBOLS=1    @CMakeFiles/cmTC_1d324.dir/objects1.rsp  -o cmTC_1d324.js 
error: unresolved symbol: _ultoa
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc", line 13, in <module>
    emcc.run()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc.py", line 1524, in run
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/shared.py", line 2007, in emscripten
    call_emscripten(cmdline)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2195, in _main
    temp_files.run_and_clean(lambda: main(
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/tempfiles.py", line 78, in run_and_clean
    return func()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2200, in <lambda>
    DEBUG=DEBUG,
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2100, in main
    temp_files=temp_files, DEBUG=DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 98, in emscript
    glue, forwarded_data = compiler_glue(metadata, settings, libraries, compiler_engine, temp_files, DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 219, in compiler_glue
    glue, forwarded_data = compile_settings(compiler_engine, settings, libraries, temp_files)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 531, in compile_settings
    cwd=path_from_root('src'), error_limit=300)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/jsrun.py", line 128, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/home/ost/programs/emsdk/node/4.1.1_64bit/bin/node', '/home/ost/programs/emsdk/emscripten/1.37.14/src/compiler.js', '/tmp/tmpr2OHa6.txt', '/home/ost/programs/emsdk/emscripten/1.37.14/src/library_pthread_stub.js'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
CMakeFiles/cmTC_1d324.dir/build.make:98: recipe for target 'cmTC_1d324.js' failed
gmake[1]: *** [cmTC_1d324.js] Error 1
gmake[1]: Leaving directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_1d324/fast' failed
gmake: *** [cmTC_1d324/fast] Error 2


Determining if the function _i64toa exists failed with the following output:
Change Dir: /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_11ac6/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_11ac6.dir/build.make CMakeFiles/cmTC_11ac6.dir/build
gmake[1]: Entering directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_11ac6.dir/CheckFunctionExists.c.o
/home/ost/programs/emsdk/emscripten/1.37.14/emcc   -g -O3 -DCHECK_FUNCTION_EXISTS=_i64toa -s ERROR_ON_UNDEFINED_SYMBOLS=1   -o CMakeFiles/cmTC_11ac6.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
Linking C executable cmTC_11ac6.js
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_11ac6.dir/link.txt --verbose=1
/home/ost/programs/emsdk/emscripten/1.37.14/emcc -g -O3 -DCHECK_FUNCTION_EXISTS=_i64toa -s ERROR_ON_UNDEFINED_SYMBOLS=1    @CMakeFiles/cmTC_11ac6.dir/objects1.rsp  -o cmTC_11ac6.js 
error: unresolved symbol: _i64toa
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc", line 13, in <module>
    emcc.run()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc.py", line 1524, in run
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/shared.py", line 2007, in emscripten
    call_emscripten(cmdline)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2195, in _main
    temp_files.run_and_clean(lambda: main(
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/tempfiles.py", line 78, in run_and_clean
    return func()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2200, in <lambda>
    DEBUG=DEBUG,
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2100, in main
    temp_files=temp_files, DEBUG=DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 98, in emscript
    glue, forwarded_data = compiler_glue(metadata, settings, libraries, compiler_engine, temp_files, DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 219, in compiler_glue
    glue, forwarded_data = compile_settings(compiler_engine, settings, libraries, temp_files)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 531, in compile_settings
    cwd=path_from_root('src'), error_limit=300)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/jsrun.py", line 128, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/home/ost/programs/emsdk/node/4.1.1_64bit/bin/node', '/home/ost/programs/emsdk/emscripten/1.37.14/src/compiler.js', '/tmp/tmpN1_VlG.txt', '/home/ost/programs/emsdk/emscripten/1.37.14/src/library_pthread_stub.js'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
CMakeFiles/cmTC_11ac6.dir/build.make:98: recipe for target 'cmTC_11ac6.js' failed
gmake[1]: *** [cmTC_11ac6.js] Error 1
gmake[1]: Leaving directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_11ac6/fast' failed
gmake: *** [cmTC_11ac6/fast] Error 2


Determining if the function _ui64toa exists failed with the following output:
Change Dir: /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_eb0d6/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_eb0d6.dir/build.make CMakeFiles/cmTC_eb0d6.dir/build
gmake[1]: Entering directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_eb0d6.dir/CheckFunctionExists.c.o
/home/ost/programs/emsdk/emscripten/1.37.14/emcc   -g -O3 -DCHECK_FUNCTION_EXISTS=_ui64toa -s ERROR_ON_UNDEFINED_SYMBOLS=1   -o CMakeFiles/cmTC_eb0d6.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
Linking C executable cmTC_eb0d6.js
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_eb0d6.dir/link.txt --verbose=1
/home/ost/programs/emsdk/emscripten/1.37.14/emcc -g -O3 -DCHECK_FUNCTION_EXISTS=_ui64toa -s ERROR_ON_UNDEFINED_SYMBOLS=1    @CMakeFiles/cmTC_eb0d6.dir/objects1.rsp  -o cmTC_eb0d6.js 
error: unresolved symbol: _ui64toa
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc", line 13, in <module>
    emcc.run()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc.py", line 1524, in run
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/shared.py", line 2007, in emscripten
    call_emscripten(cmdline)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2195, in _main
    temp_files.run_and_clean(lambda: main(
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/tempfiles.py", line 78, in run_and_clean
    return func()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2200, in <lambda>
    DEBUG=DEBUG,
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2100, in main
    temp_files=temp_files, DEBUG=DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 98, in emscript
    glue, forwarded_data = compiler_glue(metadata, settings, libraries, compiler_engine, temp_files, DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 219, in compiler_glue
    glue, forwarded_data = compile_settings(compiler_engine, settings, libraries, temp_files)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 531, in compile_settings
    cwd=path_from_root('src'), error_limit=300)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/jsrun.py", line 128, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/home/ost/programs/emsdk/node/4.1.1_64bit/bin/node', '/home/ost/programs/emsdk/emscripten/1.37.14/src/compiler.js', '/tmp/tmpU5Ftw0.txt', '/home/ost/programs/emsdk/emscripten/1.37.14/src/library_pthread_stub.js'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
CMakeFiles/cmTC_eb0d6.dir/build.make:98: recipe for target 'cmTC_eb0d6.js' failed
gmake[1]: *** [cmTC_eb0d6.js] Error 1
gmake[1]: Leaving directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_eb0d6/fast' failed
gmake: *** [cmTC_eb0d6/fast] Error 2


Determining if the function _stricmp exists failed with the following output:
Change Dir: /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_5d8b9/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_5d8b9.dir/build.make CMakeFiles/cmTC_5d8b9.dir/build
gmake[1]: Entering directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5d8b9.dir/CheckFunctionExists.c.o
/home/ost/programs/emsdk/emscripten/1.37.14/emcc   -g -O3 -DCHECK_FUNCTION_EXISTS=_stricmp -s ERROR_ON_UNDEFINED_SYMBOLS=1   -o CMakeFiles/cmTC_5d8b9.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
Linking C executable cmTC_5d8b9.js
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_5d8b9.dir/link.txt --verbose=1
/home/ost/programs/emsdk/emscripten/1.37.14/emcc -g -O3 -DCHECK_FUNCTION_EXISTS=_stricmp -s ERROR_ON_UNDEFINED_SYMBOLS=1    @CMakeFiles/cmTC_5d8b9.dir/objects1.rsp  -o cmTC_5d8b9.js 
error: unresolved symbol: _stricmp
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc", line 13, in <module>
    emcc.run()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc.py", line 1524, in run
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/shared.py", line 2007, in emscripten
    call_emscripten(cmdline)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2195, in _main
    temp_files.run_and_clean(lambda: main(
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/tempfiles.py", line 78, in run_and_clean
    return func()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2200, in <lambda>
    DEBUG=DEBUG,
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2100, in main
    temp_files=temp_files, DEBUG=DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 98, in emscript
    glue, forwarded_data = compiler_glue(metadata, settings, libraries, compiler_engine, temp_files, DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 219, in compiler_glue
    glue, forwarded_data = compile_settings(compiler_engine, settings, libraries, temp_files)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 531, in compile_settings
    cwd=path_from_root('src'), error_limit=300)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/jsrun.py", line 128, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/home/ost/programs/emsdk/node/4.1.1_64bit/bin/node', '/home/ost/programs/emsdk/emscripten/1.37.14/src/compiler.js', '/tmp/tmp05mzyI.txt', '/home/ost/programs/emsdk/emscripten/1.37.14/src/library_pthread_stub.js'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
CMakeFiles/cmTC_5d8b9.dir/build.make:98: recipe for target 'cmTC_5d8b9.js' failed
gmake[1]: *** [cmTC_5d8b9.js] Error 1
gmake[1]: Leaving directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_5d8b9/fast' failed
gmake: *** [cmTC_5d8b9/fast] Error 2


Determining if the function _strnicmp exists failed with the following output:
Change Dir: /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_456bc/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_456bc.dir/build.make CMakeFiles/cmTC_456bc.dir/build
gmake[1]: Entering directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_456bc.dir/CheckFunctionExists.c.o
/home/ost/programs/emsdk/emscripten/1.37.14/emcc   -g -O3 -DCHECK_FUNCTION_EXISTS=_strnicmp -s ERROR_ON_UNDEFINED_SYMBOLS=1   -o CMakeFiles/cmTC_456bc.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
Linking C executable cmTC_456bc.js
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_456bc.dir/link.txt --verbose=1
/home/ost/programs/emsdk/emscripten/1.37.14/emcc -g -O3 -DCHECK_FUNCTION_EXISTS=_strnicmp -s ERROR_ON_UNDEFINED_SYMBOLS=1    @CMakeFiles/cmTC_456bc.dir/objects1.rsp  -o cmTC_456bc.js 
error: unresolved symbol: _strnicmp
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc", line 13, in <module>
    emcc.run()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc.py", line 1524, in run
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/shared.py", line 2007, in emscripten
    call_emscripten(cmdline)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2195, in _main
    temp_files.run_and_clean(lambda: main(
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/tempfiles.py", line 78, in run_and_clean
    return func()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2200, in <lambda>
    DEBUG=DEBUG,
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2100, in main
    temp_files=temp_files, DEBUG=DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 98, in emscript
    glue, forwarded_data = compiler_glue(metadata, settings, libraries, compiler_engine, temp_files, DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 219, in compiler_glue
    glue, forwarded_data = compile_settings(compiler_engine, settings, libraries, temp_files)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 531, in compile_settings
    cwd=path_from_root('src'), error_limit=300)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/jsrun.py", line 128, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/home/ost/programs/emsdk/node/4.1.1_64bit/bin/node', '/home/ost/programs/emsdk/emscripten/1.37.14/src/compiler.js', '/tmp/tmp2Mq00D.txt', '/home/ost/programs/emsdk/emscripten/1.37.14/src/library_pthread_stub.js'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
CMakeFiles/cmTC_456bc.dir/build.make:98: recipe for target 'cmTC_456bc.js' failed
gmake[1]: *** [cmTC_456bc.js] Error 1
gmake[1]: Leaving directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_456bc/fast' failed
gmake: *** [cmTC_456bc/fast] Error 2


Determining if the function setjmp exists failed with the following output:
Change Dir: /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_754bd/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_754bd.dir/build.make CMakeFiles/cmTC_754bd.dir/build
gmake[1]: Entering directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_754bd.dir/CheckFunctionExists.c.o
/home/ost/programs/emsdk/emscripten/1.37.14/emcc   -g -O3 -DCHECK_FUNCTION_EXISTS=setjmp -s ERROR_ON_UNDEFINED_SYMBOLS=1   -o CMakeFiles/cmTC_754bd.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
/usr/share/cmake/Modules/CheckFunctionExists.c:7:3: warning: declaration of built-in function 'setjmp' requires inclusion of the header <setjmp.h> [-Wbuiltin-requires-header]
  CHECK_FUNCTION_EXISTS(void);
  ^
<command line>:5:31: note: expanded from here
#define CHECK_FUNCTION_EXISTS setjmp
                              ^
1 warning generated.
Linking C executable cmTC_754bd.js
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_754bd.dir/link.txt --verbose=1
/home/ost/programs/emsdk/emscripten/1.37.14/emcc -g -O3 -DCHECK_FUNCTION_EXISTS=setjmp -s ERROR_ON_UNDEFINED_SYMBOLS=1    @CMakeFiles/cmTC_754bd.dir/objects1.rsp  -o cmTC_754bd.js 
#0 0x0000000000f9ac28 llvm::sys::PrintStackTrace(llvm::raw_ostream&) (/home/ost/programs/emsdk/clang/e1.37.14_64bit/llc+0xf9ac28)
#1 0x0000000000f98bee llvm::sys::RunSignalHandlers() (/home/ost/programs/emsdk/clang/e1.37.14_64bit/llc+0xf98bee)
#2 0x0000000000f98d3c SignalHandler(int) (/home/ost/programs/emsdk/clang/e1.37.14_64bit/llc+0xf98d3c)
#3 0x00007f0f1b6855b0 __restore_rt (/lib64/libpthread.so.0+0x115b0)
#4 0x0000000000bef9c7 bool llvm::DenseMapBase<llvm::DenseMap<llvm::Type*, std::unique_ptr<llvm::UndefValue, std::default_delete<llvm::UndefValue> >, llvm::DenseMapInfo<llvm::Type*>, llvm::detail::DenseMapPair<llvm::Type*, std::unique_ptr<llvm::UndefValue, std::default_delete<llvm::UndefValue> > > >, llvm::Type*, std::unique_ptr<llvm::UndefValue, std::default_delete<llvm::UndefValue> >, llvm::DenseMapInfo<llvm::Type*>, llvm::detail::DenseMapPair<llvm::Type*, std::unique_ptr<llvm::UndefValue, std::default_delete<llvm::UndefValue> > > >::LookupBucketFor<llvm::Type*>(llvm::Type* const&, llvm::detail::DenseMapPair<llvm::Type*, std::unique_ptr<llvm::UndefValue, std::default_delete<llvm::UndefValue> > > const*&) const (/home/ost/programs/emsdk/clang/e1.37.14_64bit/llc+0xbef9c7)
#5 0x0000000000bf2f76 llvm::UndefValue::get(llvm::Type*) (/home/ost/programs/emsdk/clang/e1.37.14_64bit/llc+0xbf2f76)
#6 0x0000000001088a30 llvm::CallInst* (anonymous namespace)::SimplifyStructRegSignatures::fixCallTargetAndArguments<llvm::CallInst>(llvm::LLVMContext&, llvm::IRBuilder<llvm::ConstantFolder, llvm::IRBuilderDefaultInserter>&, llvm::CallInst*, llvm::Value*, llvm::FunctionType*, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::Value*) [clone .constprop.273] (/home/ost/programs/emsdk/clang/e1.37.14_64bit/llc+0x1088a30)
#7 0x000000000108b142 (anonymous namespace)::SimplifyStructRegSignatures::runOnModule(llvm::Module&) (/home/ost/programs/emsdk/clang/e1.37.14_64bit/llc+0x108b142)
#8 0x0000000000c744d4 llvm::legacy::PassManagerImpl::run(llvm::Module&) (/home/ost/programs/emsdk/clang/e1.37.14_64bit/llc+0xc744d4)
#9 0x000000000059af5b compileModule(char**, llvm::LLVMContext&) [clone .constprop.362] (/home/ost/programs/emsdk/clang/e1.37.14_64bit/llc+0x59af5b)
#10 0x0000000000569970 main (/home/ost/programs/emsdk/clang/e1.37.14_64bit/llc+0x569970)
#11 0x00007f0f1a822401 __libc_start_main (/lib64/libc.so.6+0x20401)
#12 0x0000000000590299 _start (/home/ost/programs/emsdk/clang/e1.37.14_64bit/llc+0x590299)
Stack dump:
0.	Program arguments: /home/ost/programs/emsdk/clang/e1.37.14_64bit/llc /tmp/tmpk2JZAS/cmTC_754bd.bc -march=js -filetype=asm -o /tmp/tmpikDRkd.4.js -emscripten-stack-size=5242880 -O3 -emscripten-global-base=8 
1.	Running pass 'Simplify function signatures by removing struct register parameters' on module '/tmp/tmpk2JZAS/cmTC_754bd.bc'.
Traceback (most recent call last):
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc", line 13, in <module>
    emcc.run()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc.py", line 1524, in run
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/shared.py", line 2007, in emscripten
    call_emscripten(cmdline)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2195, in _main
    temp_files.run_and_clean(lambda: main(
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/tempfiles.py", line 78, in run_and_clean
    return func()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2200, in <lambda>
    DEBUG=DEBUG,
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2100, in main
    temp_files=temp_files, DEBUG=DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 93, in emscript
    backend_output = compile_js(infile, settings, temp_files, DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 127, in compile_js
    backend_output = open(temp_js).read()
IOError: [Errno 2] No such file or directory: '/tmp/tmpikDRkd.4.js'
CMakeFiles/cmTC_754bd.dir/build.make:98: recipe for target 'cmTC_754bd.js' failed
gmake[1]: *** [cmTC_754bd.js] Error 1
gmake[1]: Leaving directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_754bd/fast' failed
gmake: *** [cmTC_754bd/fast] Error 2


Determining if the function sysctlbyname exists failed with the following output:
Change Dir: /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_f5dbf/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_f5dbf.dir/build.make CMakeFiles/cmTC_f5dbf.dir/build
gmake[1]: Entering directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f5dbf.dir/CheckFunctionExists.c.o
/home/ost/programs/emsdk/emscripten/1.37.14/emcc   -g -O3 -DCHECK_FUNCTION_EXISTS=sysctlbyname -s ERROR_ON_UNDEFINED_SYMBOLS=1   -o CMakeFiles/cmTC_f5dbf.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
Linking C executable cmTC_f5dbf.js
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_f5dbf.dir/link.txt --verbose=1
/home/ost/programs/emsdk/emscripten/1.37.14/emcc -g -O3 -DCHECK_FUNCTION_EXISTS=sysctlbyname -s ERROR_ON_UNDEFINED_SYMBOLS=1    @CMakeFiles/cmTC_f5dbf.dir/objects1.rsp  -o cmTC_f5dbf.js 
error: unresolved symbol: sysctlbyname
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc", line 13, in <module>
    emcc.run()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc.py", line 1524, in run
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/shared.py", line 2007, in emscripten
    call_emscripten(cmdline)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2195, in _main
    temp_files.run_and_clean(lambda: main(
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/tempfiles.py", line 78, in run_and_clean
    return func()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2200, in <lambda>
    DEBUG=DEBUG,
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2100, in main
    temp_files=temp_files, DEBUG=DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 98, in emscript
    glue, forwarded_data = compiler_glue(metadata, settings, libraries, compiler_engine, temp_files, DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 219, in compiler_glue
    glue, forwarded_data = compile_settings(compiler_engine, settings, libraries, temp_files)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 531, in compile_settings
    cwd=path_from_root('src'), error_limit=300)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/jsrun.py", line 128, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/home/ost/programs/emsdk/node/4.1.1_64bit/bin/node', '/home/ost/programs/emsdk/emscripten/1.37.14/src/compiler.js', '/tmp/tmpMYu7wy.txt', '/home/ost/programs/emsdk/emscripten/1.37.14/src/library_pthread_stub.js'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
CMakeFiles/cmTC_f5dbf.dir/build.make:98: recipe for target 'cmTC_f5dbf.js' failed
gmake[1]: *** [cmTC_f5dbf.js] Error 1
gmake[1]: Leaving directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_f5dbf/fast' failed
gmake: *** [cmTC_f5dbf/fast] Error 2


Determining if the function alloca exists failed with the following output:
Change Dir: /home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_e1f14/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_e1f14.dir/build.make CMakeFiles/cmTC_e1f14.dir/build
gmake[1]: Entering directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e1f14.dir/CheckFunctionExists.c.o
/home/ost/programs/emsdk/emscripten/1.37.14/emcc   -g -O3 -DCHECK_FUNCTION_EXISTS=alloca -s ERROR_ON_UNDEFINED_SYMBOLS=1   -o CMakeFiles/cmTC_e1f14.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
/usr/share/cmake/Modules/CheckFunctionExists.c:7:3: warning: incompatible redeclaration of library function 'alloca' [-Wincompatible-library-redeclaration]
  CHECK_FUNCTION_EXISTS(void);
  ^
<command line>:5:31: note: expanded from here
#define CHECK_FUNCTION_EXISTS alloca
                              ^
/usr/share/cmake/Modules/CheckFunctionExists.c:7:3: note: 'alloca' is a builtin with type 'void *(unsigned int)'
<command line>:5:31: note: expanded from here
#define CHECK_FUNCTION_EXISTS alloca
                              ^
1 warning generated.
Linking C executable cmTC_e1f14.js
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e1f14.dir/link.txt --verbose=1
/home/ost/programs/emsdk/emscripten/1.37.14/emcc -g -O3 -DCHECK_FUNCTION_EXISTS=alloca -s ERROR_ON_UNDEFINED_SYMBOLS=1    @CMakeFiles/cmTC_e1f14.dir/objects1.rsp  -o cmTC_e1f14.js 
error: unresolved symbol: alloca
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc", line 13, in <module>
    emcc.run()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emcc.py", line 1524, in run
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/shared.py", line 2007, in emscripten
    call_emscripten(cmdline)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2195, in _main
    temp_files.run_and_clean(lambda: main(
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/tempfiles.py", line 78, in run_and_clean
    return func()
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2200, in <lambda>
    DEBUG=DEBUG,
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 2100, in main
    temp_files=temp_files, DEBUG=DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 98, in emscript
    glue, forwarded_data = compiler_glue(metadata, settings, libraries, compiler_engine, temp_files, DEBUG)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 219, in compiler_glue
    glue, forwarded_data = compile_settings(compiler_engine, settings, libraries, temp_files)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/emscripten.py", line 531, in compile_settings
    cwd=path_from_root('src'), error_limit=300)
  File "/home/ost/programs/emsdk/emscripten/1.37.14/tools/jsrun.py", line 128, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/home/ost/programs/emsdk/node/4.1.1_64bit/bin/node', '/home/ost/programs/emsdk/emscripten/1.37.14/src/compiler.js', '/tmp/tmpnezx6g.txt', '/home/ost/programs/emsdk/emscripten/1.37.14/src/library_pthread_stub.js'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
CMakeFiles/cmTC_e1f14.dir/build.make:98: recipe for target 'cmTC_e1f14.js' failed
gmake[1]: *** [cmTC_e1f14.js] Error 1
gmake[1]: Leaving directory '/home/ost/git/web-game/build/js/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_e1f14/fast' failed
gmake: *** [cmTC_e1f14/fast] Error 2


